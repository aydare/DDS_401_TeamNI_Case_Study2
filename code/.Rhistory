install.packages("randomForestExplainer")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(randomForest))
suppressMessages(library(randomForestExplainer))
suppressMessages(library(pscl))
install.packages("pscl")
install.packages("broom")
suppressMessages(library(randomForest))
suppressMessages(library(randomForestExplainer))
suppressMessages(library(pscl))
suppressMessages(library(RCurl))
suppressMessages(library(ggplot2))
suppressMessages(library(nnet))
suppressMessages(library(kableExtra))
suppressMessages(library(broom))
jobURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/DDS_401_TeamNI_Case_Study2/master/Data/CaseStudy2-data.csv")
jobDF <- read.csv(text=jobURL, header=TRUE)
kable(head(jobDF), format = "html", align = "c") %>% kable_styling(bootstrap_options = c("striped", "hover"))
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition")
suppressMessages(library(randomForest))
suppressMessages(library(randomForestExplainer))
suppressMessages(library(pscl))
suppressMessages(library(RCurl))
suppressMessages(library(ggplot2))
suppressMessages(library(nnet))
suppressMessages(library(kableExtra))
suppressMessages(library(broom))
jobURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/DDS_401_TeamNI_Case_Study2/master/Data/CaseStudy2-data.csv")
jobDF <- read.csv(text=jobURL, header=TRUE)
kable(head(jobDF), format = "html", align = "c") %>% kable_styling(bootstrap_options = c("striped", "hover"))
str(jobDF)
jobDF$AgeGroup <- cut(jobDF$X.U.FEFF.Age, c(-Inf, 20, 29, 39, 49, 59, Inf))
levels(jobDF$AgeGroup) <- c("<20", "20-29", "30-39", "40-49", "50-59", "60+")
jobDF$GenderInd <- 0
jobDF[jobDF$Gender == "Male", ]$GenderInd <- 1
drops <- c("X.U.FEFF.Age","Gender")
jobDF <- jobDF[ , !(names(jobDF) %in% drops)]
set.seed(26)
train <- sample(nrow(jobDF),0.7*nrow(jobDF), replace = FALSE)
jobDF.train <- jobDF[train,]
jobDF.test <- jobDF[-train,]
jobs.rf <- randomForest(Attrition ~ ., data=jobDF.train, importance=TRUE)
print(jobs.rf)
a=c()
i=5
for (i in 3:34) {
jobs.rf2<-randomForest(Attrition ~.,data = jobDF.train, ntree=500, mtry=i, importance=TRUE)
pred_test_jobs<-predict(jobs.rf2,jobDF.test,type ="class")
a[i-2]=mean(pred_test_jobs==jobDF.test$Attrition)
}
plot(3:34,a,pch=19,col="steel blue",type = "o",xlab = "mtry itteration", ylab = "Accuracy %",main = "Model optimization")
jobs.rf3 <- randomForest(Attrition ~ ., data=jobDF.train, ntree=500, importance=TRUE, mtry=24)
print(jobs.rf3)
jobRFPred <-predict(jobs.rf3,jobDF.test,type = "class")
mean(pred_test_jobs==jobDF.test$Attrition)
kable(table(pred_test_jobs,jobDF.test$Attrition), format = "html", align = "c") %>% kable_styling(bootstrap_options = c("striped", "hover"))
importanceDF <- data.frame(round(importance(jobs.rf3),2))
sortYes <- importanceDF[order(importanceDF$Yes,decreasing = TRUE),]
kable(sortYes, format = "html", align = "c") %>% kable_styling(bootstrap_options = c("striped", "hover"))
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition")
?varImpPlot
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition", xlim=10)
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition", ylim=10)
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition", n.var=10)
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition", n.var=20)
varImpPlot(jobs.rf3, main="Importance of Job Variables in Attrition", n.var=15)
